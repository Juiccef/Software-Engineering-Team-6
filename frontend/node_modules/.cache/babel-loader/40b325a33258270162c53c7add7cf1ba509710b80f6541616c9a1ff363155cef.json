{"ast":null,"code":"import React,{useState}from'react';import Card from'../components/Card';import Badge from'../components/Badge';import{GSU}from'../constants/colors';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ScreenVoice(_ref){let{onBackToChat}=_ref;const[listening,setListening]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gap:16},children:[/*#__PURE__*/_jsxs(Card,{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://upload.wikimedia.org/wikipedia/en/0/0c/Georgia_State_Panthers_logo.svg\",alt:\"Panther head\",style:{width:96,height:96,margin:\"0 auto\"}}),/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:8},children:\"Speak to Pounce\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:0,opacity:0.9},children:\"Ask advising questions, say a course list, or describe your schedule constraints.\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",gap:10,marginTop:6},children:[/*#__PURE__*/_jsx(Badge,{children:\"Speech \\u2192 Text\"}),/*#__PURE__*/_jsx(Badge,{children:\"Auto-send to chat\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:18},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setListening(v=>!v),style:{width:84,height:84,borderRadius:999,border:\"2px solid \".concat(GSU.blue),background:listening?GSU.blue:\"transparent\",color:listening?\"white\":GSU.blue,fontSize:28,cursor:\"pointer\"},\"aria-pressed\":listening,\"aria-label\":\"Toggle microphone\",children:\"\\uD83C\\uDFA4\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:12,fontSize:13,opacity:0.8},children:listening?\"Listeningâ€¦ Tap to stop.\":\"Tap the mic to start\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:18},children:/*#__PURE__*/_jsx(\"button\",{onClick:onBackToChat,style:{background:\"transparent\",color:\"var(--fg)\",border:\"1px solid var(--line)\",padding:\"10px 14px\",borderRadius:12,cursor:\"pointer\"},children:\"Back to chat\"})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tip:\"}),\" When you tap the Pounce banner on the Chat screen, you'll jump straight here. After recording, we'll insert the transcript into the chat input automatically (wire up your STT API here).\"]})]});}export default ScreenVoice;","map":{"version":3,"names":["React","useState","Card","Badge","GSU","jsx","_jsx","jsxs","_jsxs","ScreenVoice","_ref","onBackToChat","listening","setListening","style","display","gap","children","textAlign","src","alt","width","height","margin","marginBottom","marginTop","opacity","justifyContent","onClick","v","borderRadius","border","concat","blue","background","color","fontSize","cursor","padding"],"sources":["/Users/edge/Desktop/GsuChatbot/frontend/src/screens/ScreenVoice.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../components/Card';\nimport Badge from '../components/Badge';\nimport { GSU } from '../constants/colors';\n\nfunction ScreenVoice({ onBackToChat }) {\n  const [listening, setListening] = useState(false);\n  \n  return (\n    <div style={{ display: \"grid\", gap: 16 }}>\n      <Card style={{ textAlign: \"center\" }}>\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/en/0/0c/Georgia_State_Panthers_logo.svg\"\n          alt=\"Panther head\"\n          style={{ width: 96, height: 96, margin: \"0 auto\" }}\n        />\n        <h2 style={{ marginBottom: 8 }}>Speak to Pounce</h2>\n        <p style={{ marginTop: 0, opacity: 0.9 }}>\n          Ask advising questions, say a course list, or describe your schedule constraints.\n        </p>\n        <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10, marginTop: 6 }}>\n          <Badge>Speech â†’ Text</Badge>\n          <Badge>Auto-send to chat</Badge>\n        </div>\n        <div style={{ marginTop: 18 }}>\n          <button\n            onClick={() => setListening((v) => !v)}\n            style={{\n              width: 84,\n              height: 84,\n              borderRadius: 999,\n              border: `2px solid ${GSU.blue}`,\n              background: listening ? GSU.blue : \"transparent\",\n              color: listening ? \"white\" : GSU.blue,\n              fontSize: 28,\n              cursor: \"pointer\",\n            }}\n            aria-pressed={listening}\n            aria-label=\"Toggle microphone\"\n          >\n            ðŸŽ¤\n          </button>\n        </div>\n        <div style={{ marginTop: 12, fontSize: 13, opacity: 0.8 }}>\n          {listening ? \"Listeningâ€¦ Tap to stop.\" : \"Tap the mic to start\"}\n        </div>\n        <div style={{ marginTop: 18 }}>\n          <button \n            onClick={onBackToChat} \n            style={{ \n              background: \"transparent\", \n              color: \"var(--fg)\", \n              border: `1px solid var(--line)`, \n              padding: \"10px 14px\", \n              borderRadius: 12, \n              cursor: \"pointer\" \n            }}\n          >\n            Back to chat\n          </button>\n        </div>\n      </Card>\n\n      <Card>\n        <strong>Tip:</strong> When you tap the Pounce banner on the Chat screen, you'll jump straight here. After recording, we'll insert the transcript into the chat input automatically (wire up your STT API here).\n      </Card>\n    </div>\n  );\n}\n\nexport default ScreenVoice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}