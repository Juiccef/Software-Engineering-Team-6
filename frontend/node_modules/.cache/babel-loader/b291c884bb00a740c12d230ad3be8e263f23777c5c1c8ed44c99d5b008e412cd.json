{"ast":null,"code":"var _jsxFileName = \"/Users/edge/Desktop/GsuChatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTheme } from './hooks/useTheme';\nimport Layout from './components/Layout';\nimport ScreenHome from './screens/ScreenHome';\nimport ScreenChat from './screens/ScreenChat';\nimport ScreenVoice from './screens/ScreenVoice';\nimport ScreenFiles from './screens/ScreenFiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    mode,\n    setMode,\n    vars\n  } = useTheme();\n  const [screen, setScreen] = useState(\"home\");\n  const [filesSection, setFilesSection] = useState(\"academic\");\n  const [messages, setMessages] = useState([{\n    id: \"1\",\n    role: \"bot\",\n    text: \"Hi! I'm Pounce Assistant, your digital guide to advising, course planning, deadlines, and campus life at Georgia State University. How can I help you today?\"\n  }, {\n    id: \"2\",\n    role: \"bot\",\n    text: \"Here's what I can help you with:\\n\\n🎓 **Academic Advising** - Get personalized course recommendations and degree planning assistance\\n📅 **Schedule Planning** - Build optimal class schedules that fit your preferences and requirements\\n🎤 **Voice Assistant** - Speak naturally with me using advanced speech recognition\\n\\nWhat would you like to explore first?\",\n    showQuickActions: true\n  }]);\n\n  // Handle sending messages\n  const handleSendMessage = message => {\n    setMessages(prev => [...prev, message]);\n\n    // Simulate bot response based on message content\n    setTimeout(() => {\n      var _message$text;\n      const userText = ((_message$text = message.text) === null || _message$text === void 0 ? void 0 : _message$text.toLowerCase()) || '';\n      let response = \"\";\n      if (userText.includes('transcript') || userText.includes('upload')) {\n        response = \"Great! I can help you analyze your transcripts. You can upload your academic documents using the 📷 button in the chat. Once uploaded, I'll help you understand your progress and suggest next steps for your degree.\";\n      } else if (userText.includes('degree') || userText.includes('audit')) {\n        response = \"I can help you with degree planning and audits! I can analyze your current progress, identify remaining requirements, and suggest courses to complete your degree efficiently. Would you like me to help you plan your next semester?\";\n      } else if (userText.includes('schedule') || userText.includes('planning')) {\n        response = \"Perfect! I'm excellent at schedule planning. I can help you build optimal class schedules that fit your preferences, avoid conflicts, and meet your degree requirements. What type of schedule are you looking for - morning classes, afternoon, or flexible timing?\";\n      } else if (userText.includes('voice') || userText.includes('speak')) {\n        response = \"I'd love to chat with you using voice! Click the voice button above or use the 🎤 Start Voice Chat button to begin a voice conversation. I can understand natural speech and respond conversationally.\";\n      } else if (userText.includes('resource') || userText.includes('help')) {\n        response = \"I can connect you with various campus resources! I can help you find tutoring services, academic support, career counseling, financial aid information, and campus events. What specific type of support are you looking for?\";\n      } else if (userText.includes('event') || userText.includes('campus')) {\n        response = \"I can help you discover campus events and activities! I can show you upcoming academic events, social activities, career fairs, and student organization meetings. Are you looking for academic, social, or career-related events?\";\n      } else {\n        response = \"Thanks for your message! I'm here to help with all aspects of your GSU experience. You can ask me about:\\n\\n• Academic planning and course selection\\n• Schedule building and optimization\\n• Degree requirements and audits\\n• Campus resources and support\\n• Events and activities\\n• Voice conversations\\n\\nWhat would you like to explore?\";\n      }\n      setMessages(prev => [...prev, {\n        id: Math.random().toString(36).slice(2),\n        role: \"bot\",\n        text: response\n      }]);\n    }, 1000);\n  };\n\n  // Handle quick actions\n  const handleQuickAction = actionId => {\n    const actionMessages = {\n      transcript: \"I'd like to upload my transcripts for analysis\",\n      audit: \"Can you help me check my degree audit?\",\n      schedule: \"I need help building my class schedule\",\n      resources: \"What campus resources are available to me?\",\n      events: \"Show me upcoming campus events\",\n      voice: \"I want to use voice chat\"\n    };\n    const message = actionMessages[actionId];\n    if (message) {\n      handleSendMessage({\n        role: \"user\",\n        text: message\n      });\n    }\n  };\n\n  // simple route helpers\n  const go = s => {\n    setScreen(s);\n  };\n\n  // Navigate to files page with specific section\n  const goToFiles = section => {\n    setFilesSection(section);\n    setScreen(\"files\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...vars,\n      height: \"100vh\",\n      background: \"var(--bg)\",\n      color: \"var(--fg)\",\n      transition: \"background 180ms ease, color 180ms ease\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      messages: messages,\n      onSendMessage: handleSendMessage,\n      onQuickAction: handleQuickAction,\n      showChatBox: true,\n      mode: mode,\n      onToggleTheme: () => setMode(mode === \"dark\" ? \"light\" : \"dark\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 24,\n          padding: \"0 20px\"\n        },\n        children: [screen === \"home\" && /*#__PURE__*/_jsxDEV(ScreenHome, {\n          onStart: () => go(\"chat\"),\n          onGoChat: () => go(\"chat\"),\n          onGoToFiles: goToFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), screen === \"chat\" && /*#__PURE__*/_jsxDEV(ScreenChat, {\n          onOpenVoice: () => go(\"voice\"),\n          onGoToFiles: goToFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), screen === \"voice\" && /*#__PURE__*/_jsxDEV(ScreenVoice, {\n          onBackToChat: () => go(\"chat\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 34\n        }, this), screen === \"files\" && /*#__PURE__*/_jsxDEV(ScreenFiles, {\n          section: filesSection,\n          onBack: () => go(\"home\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qD2k/ak11dXL4lp9bM4/UBuzTIs=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useTheme","Layout","ScreenHome","ScreenChat","ScreenVoice","ScreenFiles","jsxDEV","_jsxDEV","App","_s","mode","setMode","vars","screen","setScreen","filesSection","setFilesSection","messages","setMessages","id","role","text","showQuickActions","handleSendMessage","message","prev","setTimeout","_message$text","userText","toLowerCase","response","includes","Math","random","toString","slice","handleQuickAction","actionId","actionMessages","transcript","audit","schedule","resources","events","voice","go","s","goToFiles","section","style","height","background","color","transition","children","onSendMessage","onQuickAction","showChatBox","onToggleTheme","width","display","flexDirection","gap","padding","onStart","onGoChat","onGoToFiles","fileName","_jsxFileName","lineNumber","columnNumber","onOpenVoice","onBackToChat","onBack","_c","$RefreshReg$"],"sources":["/Users/edge/Desktop/GsuChatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTheme } from './hooks/useTheme';\nimport Layout from './components/Layout';\nimport ScreenHome from './screens/ScreenHome';\nimport ScreenChat from './screens/ScreenChat';\nimport ScreenVoice from './screens/ScreenVoice';\nimport ScreenFiles from './screens/ScreenFiles';\n\nfunction App() {\n  const { mode, setMode, vars } = useTheme();\n  const [screen, setScreen] = useState(\"home\");\n  const [filesSection, setFilesSection] = useState(\"academic\");\n  const [messages, setMessages] = useState([\n    { \n      id: \"1\", \n      role: \"bot\", \n      text: \"Hi! I'm Pounce Assistant, your digital guide to advising, course planning, deadlines, and campus life at Georgia State University. How can I help you today?\" \n    },\n    { \n      id: \"2\", \n      role: \"bot\", \n      text: \"Here's what I can help you with:\\n\\n🎓 **Academic Advising** - Get personalized course recommendations and degree planning assistance\\n📅 **Schedule Planning** - Build optimal class schedules that fit your preferences and requirements\\n🎤 **Voice Assistant** - Speak naturally with me using advanced speech recognition\\n\\nWhat would you like to explore first?\",\n      showQuickActions: true\n    },\n  ]);\n\n  // Handle sending messages\n  const handleSendMessage = (message) => {\n    setMessages(prev => [...prev, message]);\n    \n    // Simulate bot response based on message content\n    setTimeout(() => {\n      const userText = message.text?.toLowerCase() || '';\n      let response = \"\";\n      \n      if (userText.includes('transcript') || userText.includes('upload')) {\n        response = \"Great! I can help you analyze your transcripts. You can upload your academic documents using the 📷 button in the chat. Once uploaded, I'll help you understand your progress and suggest next steps for your degree.\";\n      } else if (userText.includes('degree') || userText.includes('audit')) {\n        response = \"I can help you with degree planning and audits! I can analyze your current progress, identify remaining requirements, and suggest courses to complete your degree efficiently. Would you like me to help you plan your next semester?\";\n      } else if (userText.includes('schedule') || userText.includes('planning')) {\n        response = \"Perfect! I'm excellent at schedule planning. I can help you build optimal class schedules that fit your preferences, avoid conflicts, and meet your degree requirements. What type of schedule are you looking for - morning classes, afternoon, or flexible timing?\";\n      } else if (userText.includes('voice') || userText.includes('speak')) {\n        response = \"I'd love to chat with you using voice! Click the voice button above or use the 🎤 Start Voice Chat button to begin a voice conversation. I can understand natural speech and respond conversationally.\";\n      } else if (userText.includes('resource') || userText.includes('help')) {\n        response = \"I can connect you with various campus resources! I can help you find tutoring services, academic support, career counseling, financial aid information, and campus events. What specific type of support are you looking for?\";\n      } else if (userText.includes('event') || userText.includes('campus')) {\n        response = \"I can help you discover campus events and activities! I can show you upcoming academic events, social activities, career fairs, and student organization meetings. Are you looking for academic, social, or career-related events?\";\n      } else {\n        response = \"Thanks for your message! I'm here to help with all aspects of your GSU experience. You can ask me about:\\n\\n• Academic planning and course selection\\n• Schedule building and optimization\\n• Degree requirements and audits\\n• Campus resources and support\\n• Events and activities\\n• Voice conversations\\n\\nWhat would you like to explore?\";\n      }\n      \n      setMessages(prev => [...prev, {\n        id: Math.random().toString(36).slice(2),\n        role: \"bot\",\n        text: response\n      }]);\n    }, 1000);\n  };\n\n  // Handle quick actions\n  const handleQuickAction = (actionId) => {\n    const actionMessages = {\n      transcript: \"I'd like to upload my transcripts for analysis\",\n      audit: \"Can you help me check my degree audit?\",\n      schedule: \"I need help building my class schedule\",\n      resources: \"What campus resources are available to me?\",\n      events: \"Show me upcoming campus events\",\n      voice: \"I want to use voice chat\"\n    };\n\n    const message = actionMessages[actionId];\n    if (message) {\n      handleSendMessage({ role: \"user\", text: message });\n    }\n  };\n\n  // simple route helpers\n  const go = (s) => {\n    setScreen(s);\n  };\n\n  // Navigate to files page with specific section\n  const goToFiles = (section) => {\n    setFilesSection(section);\n    setScreen(\"files\");\n  };\n\n  return (\n    <div style={{ \n      ...vars, \n      height: \"100vh\", \n      background: \"var(--bg)\", \n      color: \"var(--fg)\", \n      transition: \"background 180ms ease, color 180ms ease\" \n    }}>\n      <Layout \n        messages={messages}\n        onSendMessage={handleSendMessage}\n        onQuickAction={handleQuickAction}\n        showChatBox={true}\n        mode={mode}\n        onToggleTheme={() => setMode(mode === \"dark\" ? \"light\" : \"dark\")}\n      >\n        <div style={{ \n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 24,\n          padding: \"0 20px\"\n        }}>\n          {screen === \"home\" && (\n            <ScreenHome \n              onStart={() => go(\"chat\")} \n              onGoChat={() => go(\"chat\")}\n              onGoToFiles={goToFiles}\n            />\n          )}\n          {screen === \"chat\" && (\n            <ScreenChat \n              onOpenVoice={() => go(\"voice\")}\n              onGoToFiles={goToFiles}\n            />\n          )}\n          {screen === \"voice\" && <ScreenVoice onBackToChat={() => go(\"chat\")} />}\n          {screen === \"files\" && (\n            <ScreenFiles \n              section={filesSection}\n              onBack={() => go(\"home\")}\n            />\n          )}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}