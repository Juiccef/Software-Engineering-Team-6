{"ast":null,"code":"var _jsxFileName = \"/Users/edge/Desktop/GsuChatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTheme } from './hooks/useTheme';\nimport Layout from './components/Layout';\nimport ScreenHome from './screens/ScreenHome';\nimport ScreenChat from './screens/ScreenChat';\nimport ScreenVoice from './screens/ScreenVoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    mode,\n    setMode,\n    vars\n  } = useTheme();\n  const [screen, setScreen] = useState(\"home\");\n  const [messages, setMessages] = useState([{\n    id: \"1\",\n    role: \"bot\",\n    text: \"Hi! I'm Pounce Assistant, your digital guide to advising, course planning, deadlines, and campus life at Georgia State University. How can I help you today?\"\n  }, {\n    id: \"2\",\n    role: \"bot\",\n    text: \"Here's what I can help you with:\\n\\nðŸŽ“ **Academic Advising** - Get personalized course recommendations and degree planning assistance\\nðŸ“… **Schedule Planning** - Build optimal class schedules that fit your preferences and requirements\\nðŸŽ¤ **Voice Assistant** - Speak naturally with me using advanced speech recognition\\n\\nYou can also try these quick actions:\\nâ€¢ Upload Transcripts\\nâ€¢ Check Degree Audit\\nâ€¢ Find Resources\\nâ€¢ Campus Events\\n\\nWhat would you like to explore first?\"\n  }]);\n\n  // Handle sending messages\n  const handleSendMessage = message => {\n    setMessages(prev => [...prev, message]);\n\n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        id: Math.random().toString(36).slice(2),\n        role: \"bot\",\n        text: \"Thanks for your message! I'm here to help with advising, course planning, and campus life questions.\"\n      }]);\n    }, 1000);\n  };\n\n  // simple route helpers\n  const go = s => {\n    setScreen(s);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...vars,\n      height: \"100vh\",\n      background: \"var(--bg)\",\n      color: \"var(--fg)\",\n      transition: \"background 180ms ease, color 180ms ease\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      messages: messages,\n      onSendMessage: handleSendMessage,\n      showChatBox: true,\n      mode: mode,\n      onToggleTheme: () => setMode(mode === \"dark\" ? \"light\" : \"dark\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: 1200,\n          margin: \"0 auto\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 16\n        },\n        children: [screen === \"home\" && /*#__PURE__*/_jsxDEV(ScreenHome, {\n          onStart: () => go(\"chat\"),\n          onGoChat: () => go(\"chat\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), screen === \"chat\" && /*#__PURE__*/_jsxDEV(ScreenChat, {\n          onOpenVoice: () => go(\"voice\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this), screen === \"voice\" && /*#__PURE__*/_jsxDEV(ScreenVoice, {\n          onBackToChat: () => go(\"chat\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZiwwL22iBbi+1+2tDtT8/ZUHGRM=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useTheme","Layout","ScreenHome","ScreenChat","ScreenVoice","jsxDEV","_jsxDEV","App","_s","mode","setMode","vars","screen","setScreen","messages","setMessages","id","role","text","handleSendMessage","message","prev","setTimeout","Math","random","toString","slice","go","s","style","height","background","color","transition","children","onSendMessage","showChatBox","onToggleTheme","maxWidth","margin","width","display","flexDirection","gap","onStart","onGoChat","fileName","_jsxFileName","lineNumber","columnNumber","onOpenVoice","onBackToChat","_c","$RefreshReg$"],"sources":["/Users/edge/Desktop/GsuChatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTheme } from './hooks/useTheme';\nimport Layout from './components/Layout';\nimport ScreenHome from './screens/ScreenHome';\nimport ScreenChat from './screens/ScreenChat';\nimport ScreenVoice from './screens/ScreenVoice';\n\nfunction App() {\n  const { mode, setMode, vars } = useTheme();\n  const [screen, setScreen] = useState(\"home\");\n  const [messages, setMessages] = useState([\n    { \n      id: \"1\", \n      role: \"bot\", \n      text: \"Hi! I'm Pounce Assistant, your digital guide to advising, course planning, deadlines, and campus life at Georgia State University. How can I help you today?\" \n    },\n    { \n      id: \"2\", \n      role: \"bot\", \n      text: \"Here's what I can help you with:\\n\\nðŸŽ“ **Academic Advising** - Get personalized course recommendations and degree planning assistance\\nðŸ“… **Schedule Planning** - Build optimal class schedules that fit your preferences and requirements\\nðŸŽ¤ **Voice Assistant** - Speak naturally with me using advanced speech recognition\\n\\nYou can also try these quick actions:\\nâ€¢ Upload Transcripts\\nâ€¢ Check Degree Audit\\nâ€¢ Find Resources\\nâ€¢ Campus Events\\n\\nWhat would you like to explore first?\" \n    },\n  ]);\n\n  // Handle sending messages\n  const handleSendMessage = (message) => {\n    setMessages(prev => [...prev, message]);\n    \n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        id: Math.random().toString(36).slice(2),\n        role: \"bot\",\n        text: \"Thanks for your message! I'm here to help with advising, course planning, and campus life questions.\"\n      }]);\n    }, 1000);\n  };\n\n  // simple route helpers\n  const go = (s) => {\n    setScreen(s);\n  };\n\n  return (\n    <div style={{ \n      ...vars, \n      height: \"100vh\", \n      background: \"var(--bg)\", \n      color: \"var(--fg)\", \n      transition: \"background 180ms ease, color 180ms ease\" \n    }}>\n      <Layout \n        messages={messages}\n        onSendMessage={handleSendMessage}\n        showChatBox={true}\n        mode={mode}\n        onToggleTheme={() => setMode(mode === \"dark\" ? \"light\" : \"dark\")}\n      >\n        <div style={{ \n          maxWidth: 1200, \n          margin: \"0 auto\", \n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 16\n        }}>\n          {screen === \"home\" && (\n            <ScreenHome onStart={() => go(\"chat\")} onGoChat={() => go(\"chat\")} />\n          )}\n          {screen === \"chat\" && <ScreenChat onOpenVoice={() => go(\"voice\")} />}\n          {screen === \"voice\" && <ScreenVoice onBackToChat={() => go(\"chat\")} />}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}